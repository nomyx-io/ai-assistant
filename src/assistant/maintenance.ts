// maintenanceManager.ts
import { AgentService } from './agentService';
import { ToolRegistry } from './tools/toolRegistry';
import { MemoryService } from './memory/memoryService';

export class MaintenanceManager {
  constructor(
    private agentService: AgentService,
    private toolRegistry: ToolRegistry,
    private memoryService: MemoryService
  ) {}

  async performMaintenance(): Promise<void> {
    await this.reviewAutoGeneratedTools();
    await this.optimizeMemory();
    await this.agentService.performMaintenance();
  }

  private async reviewAutoGeneratedTools(): Promise<void> {
    await this.toolRegistry.reviewAutoGeneratedTools();
  }

  private async optimizeMemory(): Promise<void> {
    const memories = await this.memoryService.listMemories();
    const lowConfidenceMemories = memories.filter(memory => memory.confidence < 0.3);
    for (const memory of lowConfidenceMemories) {
      await this.memoryService.removeMemory(memory.input);
    }
  }
}